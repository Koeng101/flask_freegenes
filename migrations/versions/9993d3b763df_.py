"""empty message

Revision ID: 9993d3b763df
Revises: cee94680df1f
Create Date: 2019-03-26 13:12:38.450117

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9993d3b763df'
down_revision = 'cee94680df1f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('protocols',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('time_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('protocol', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.drop_table('opentrons')
    op.create_unique_constraint(None, 'collections', ['uuid'])
    op.create_unique_constraint(None, 'parts', ['uuid'])
    op.add_column('plates', sa.Column('protocol_uuid', postgresql.UUID(), nullable=False))
    op.create_unique_constraint(None, 'plates', ['uuid'])
    op.create_foreign_key(None, 'plates', 'protocols', ['protocol_uuid'], ['uuid'])
    op.create_unique_constraint(None, 'robots', ['uuid'])
    op.create_unique_constraint(None, 'samples', ['uuid'])
    op.create_unique_constraint(None, 'tags', ['uuid'])
    op.create_unique_constraint(None, 'wells', ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wells', type_='unique')
    op.drop_constraint(None, 'tags', type_='unique')
    op.drop_constraint(None, 'samples', type_='unique')
    op.drop_constraint(None, 'robots', type_='unique')
    op.drop_constraint(None, 'plates', type_='foreignkey')
    op.drop_constraint(None, 'plates', type_='unique')
    op.drop_column('plates', 'protocol_uuid')
    op.drop_constraint(None, 'parts', type_='unique')
    op.drop_constraint(None, 'collections', type_='unique')
    op.create_table('opentrons',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('protocol', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('uuid', name='opentrons_pkey')
    )
    op.drop_table('protocols')
    # ### end Alembic commands ###
