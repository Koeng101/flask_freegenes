"""empty message

Revision ID: 4637cc68a77f
Revises: 6e8ba09d254c
Create Date: 2019-04-05 16:20:04.276969

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4637cc68a77f'
down_revision = '6e8ba09d254c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'containers', ['uuid'])
    op.drop_constraint('containers_parent_uuid_fkey', 'containers', type_='foreignkey')
    op.drop_column('containers', 'parent_uuid')
    op.drop_column('containers', 'time_updated')
    op.drop_column('containers', 'child_locations')
    op.drop_column('containers', 'time_created')
    op.drop_column('containers', 'location')
    op.create_unique_constraint(None, 'organisms', ['uuid'])
    op.drop_constraint('plates_container_uuid_fkey', 'plates', type_='foreignkey')
    op.drop_column('plates', 'container_uuid')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('plates', sa.Column('container_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('plates_container_uuid_fkey', 'plates', 'containers', ['container_uuid'], ['uuid'])
    op.drop_constraint(None, 'organisms', type_='unique')
    op.add_column('containers', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('containers', sa.Column('time_created', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('containers', sa.Column('child_locations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('containers', sa.Column('time_updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('containers', sa.Column('parent_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('containers_parent_uuid_fkey', 'containers', 'containers', ['parent_uuid'], ['uuid'])
    op.drop_constraint(None, 'containers', type_='unique')
    # ### end Alembic commands ###
